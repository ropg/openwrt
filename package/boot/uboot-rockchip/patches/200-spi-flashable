commit a337f5e73278d6cc19163794c62c7ce923dad15f
Author: Rop Gonggrijp <rop@gonggri.jp>
Date:   Mon Sep 6 19:22:39 2021 +0200

    spi_flashable

diff --git a/arch/arm/dts/rk3328-nanopi-r2s-u-boot.dtsi b/arch/arm/dts/rk3328-nanopi-r2s-u-boot.dtsi
index 9e2ced15..912f81f7 100644
--- a/arch/arm/dts/rk3328-nanopi-r2s-u-boot.dtsi
+++ b/arch/arm/dts/rk3328-nanopi-r2s-u-boot.dtsi
@@ -6,10 +6,14 @@
 
 #include "rk3328-u-boot.dtsi"
 #include "rk3328-sdram-ddr4-666.dtsi"
+
 / {
+
 	chosen {
-		u-boot,spl-boot-order = "same-as-spl", &sdmmc, &emmc;
+		u-boot,spl-boot-order = "same-as-spl", &spi_flash, &sdmmc;
+		u-boot,spl-payload-offset = <0x100000>;
 	};
+
 };
 
 &gpio0 {
@@ -38,3 +42,12 @@
 	snps,reset-active-low;
 	snps,reset-delays-us = <0 10000 50000>;
 };
+
+&spi0 {
+	u-boot,dm-spl;
+	u-boot,dm-pre-reloc;
+	spi_flash: spiflash@0 {
+		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
+	};
+};
diff --git a/arch/arm/dts/rk3328-nanopi-r2s.dts b/arch/arm/dts/rk3328-nanopi-r2s.dts
index 5445c5cb..eedf93d2 100644
--- a/arch/arm/dts/rk3328-nanopi-r2s.dts
+++ b/arch/arm/dts/rk3328-nanopi-r2s.dts
@@ -14,7 +14,7 @@
 	compatible = "friendlyarm,nanopi-r2s", "rockchip,rk3328";
 
 	chosen {
-		stdout-path = "serial2:1500000n8";
+		stdout-path = "serial2:115200n8";
 	};
 
 	gmac_clk: gmac-clock {
@@ -334,6 +334,16 @@
 	status = "okay";
 };
 
+&spi0 {
+        status = "okay";
+
+        spi_flash: spiflash@0 {
+                compatible = "mxicy,mx25l12805d", "jedec,spi-nor";
+                reg = <0>;
+                spi-max-frequency = <50000000>;
+        };
+};
+
 &tsadc {
 	rockchip,hw-tshut-mode = <0>;
 	rockchip,hw-tshut-polarity = <0>;
diff --git a/cmd/spi.c b/cmd/spi.c
index 4aea1914..86b29e89 100644
--- a/cmd/spi.c
+++ b/cmd/spi.c
@@ -13,6 +13,7 @@
 #include <dm.h>
 #include <errno.h>
 #include <spi.h>
+#include <env.h>
 
 /*-----------------------------------------------------------------------
  * Definitions
@@ -100,6 +101,8 @@ done:
 int do_spi(struct cmd_tbl *cmdtp, int flag, int argc, char *const argv[])
 {
 	char  *cp = 0;
+	char  *outputvar = 0;
+	char  outputstr[MAX_SPI_BYTES * 2 + 1];
 	uchar tmp;
 	int   j;
 
@@ -125,6 +128,8 @@ int do_spi(struct cmd_tbl *cmdtp, int flag, int argc, char *const argv[])
 				mode = simple_strtoul(cp+1, &cp, 10);
 			if (*cp == '@')
 				freq = simple_strtoul(cp+1, &cp, 10);
+		} else {
+                        return CMD_RET_USAGE;
 		}
 		if (argc >= 3)
 			bitlen = simple_strtoul(argv[2], NULL, 10);
@@ -146,6 +151,8 @@ int do_spi(struct cmd_tbl *cmdtp, int flag, int argc, char *const argv[])
 					dout[j / 2] |= tmp;
 			}
 		}
+		if (argc >=5)
+			outputvar = argv[4];
 	}
 
 	if ((bitlen < 0) || (bitlen >  (MAX_SPI_BYTES * 8))) {
@@ -156,19 +163,26 @@ int do_spi(struct cmd_tbl *cmdtp, int flag, int argc, char *const argv[])
 	if (do_spi_xfer(bus, cs))
 		return 1;
 
+	if (outputvar) {
+		for (j = 0; j < ((bitlen + 7) / 8); j++)
+			sprintf(outputstr + j * 2, "%02X", din[j]);
+		env_set(outputvar, outputstr);
+	}
+
 	return 0;
 }
 
 /***************************************************/
 
 U_BOOT_CMD(
-	sspi,	5,	1,	do_spi,
+	sspi,	6,	1,	do_spi,
 	"SPI utility command",
-	"[<bus>:]<cs>[.<mode>][@<freq>] <bit_len> <dout> - Send and receive bits\n"
-	"<bus>     - Identifies the SPI bus\n"
-	"<cs>      - Identifies the chip select\n"
-	"<mode>    - Identifies the SPI mode to use\n"
-	"<freq>    - Identifies the SPI bus frequency in Hz\n"
-	"<bit_len> - Number of bits to send (base 10)\n"
-	"<dout>    - Hexadecimal string that gets sent"
+	"[<bus>:]<cs>[.<mode>][@<freq>] <bit_len> <dout> [<variable>] - Send and receive bits\n"
+	"<bus>      - Identifies the SPI bus\n"
+	"<cs>       - Identifies the chip select\n"
+	"<mode>     - Identifies the SPI mode to use\n"
+	"<freq>     - Identifies the SPI bus frequency in Hz\n"
+	"<bit_len>  - Number of bits to send (base 10)\n"
+	"<dout>     - Hexadecimal string that gets sent\n"
+	"<variable> - Optional environment variable to write output to"
 );
diff --git a/configs/nanopi-r2s-rk3328_defconfig b/configs/nanopi-r2s-rk3328_defconfig
index 2f67439f..0c761ac2 100644
--- a/configs/nanopi-r2s-rk3328_defconfig
+++ b/configs/nanopi-r2s-rk3328_defconfig
@@ -77,7 +77,7 @@ CONFIG_RAM=y
 CONFIG_SPL_RAM=y
 CONFIG_TPL_RAM=y
 CONFIG_DM_RESET=y
-CONFIG_BAUDRATE=1500000
+CONFIG_BAUDRATE=115200
 CONFIG_DEBUG_UART_SHIFT=2
 CONFIG_SYSRESET=y
 # CONFIG_TPL_SYSRESET is not set
@@ -96,3 +96,55 @@ CONFIG_USB_GADGET_DWC2_OTG=y
 CONFIG_SPL_TINY_MEMSET=y
 CONFIG_TPL_TINY_MEMSET=y
 CONFIG_ERRNO_STR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x800
+CONFIG_ROCKCHIP_SPI=y
+CONFIG_SPI_FLASH_MACRONIX=y
+CONFIG_CMD_MTD=y
+CONFIG_CMD_MTDPARTS=y
+CONFIG_MTDIDS_DEFAULT="nor0=spi_flash"
+CONFIG_MTDPARTS_DEFAULT="mtdparts=nor0:992k(uboot-spl),32k(uboot-env),1M(uboot-fit),6M(kernel),8M(rootfs)"
+CONFIG_MTD_PARTITIONS=y
+CONFIG_MTD=y
+CONFIG_SPI_FLASH_MTD=y
+CONFIG_SYS_SPI_U_BOOT_OFFS=0x100000
+CONFIG_SPL_NOR_SUPPORT=1
+# CONFIG_AUTOBOOT_MENU_SHOW is not set
+CONFIG_BAUDRATE=115200
+CONFIG_BOOTDELAY=0
+CONFIG_CMD_BOOTMENU=y
+CONFIG_CMD_FLASH=y
+CONFIG_CMD_MTD=y
+CONFIG_CMD_MTDPARTS=y
+# CONFIG_CMD_MTDPARTS_SHOW_NET_SIZES is not set
+# CONFIG_CMD_MTDPARTS_SPREAD is not set
+# CONFIG_CMD_ONENAND is not set
+CONFIG_CMD_SPI=y
+CONFIG_DEFAULT_ENV_FILE="default.env"
+CONFIG_DEFAULT_SPI_BUS=0
+CONFIG_DEFAULT_SPI_MODE=0
+# CONFIG_ENV_IS_IN_MMC is not set
+CONFIG_ENV_IS_NOWHERE=y
+# CONFIG_FDT_FIXUP_PARTITIONS is not set
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_MTD=y
+CONFIG_MTDIDS_DEFAULT="nor0=spi_flash"
+CONFIG_MTD_PARTITIONS=y
+# CONFIG_NET is not set
+CONFIG_ROCKCHIP_SPI=y
+CONFIG_SPI_FLASH_MACRONIX=y
+CONFIG_SPI_FLASH_MTD=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+CONFIG_SPL_MMC_IO_VOLTAGE=y
+CONFIG_SPL_MMC_UHS_SUPPORT=y
+CONFIG_SPL_NOR_SUPPORT=y
+CONFIG_SPL_ROCKCHIP_BACK_TO_BROM=y
+# CONFIG_SPL_SPI_FLASH_SFDP_SUPPORT is not set
+CONFIG_SPL_SPI_FLASH_SUPPORT=y
+# CONFIG_SPL_SPI_FLASH_TINY is not set
+CONFIG_SPL_SPI_LOAD=y
+CONFIG_SPL_SPI_SUPPORT=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x800
+# CONFIG_SYS_MTDPARTS_RUNTIME is not set
+CONFIG_SYS_SPI_U_BOOT_OFFS=0x100000
+CONFIG_USE_DEFAULT_ENV_FILE=y
diff --git a/default.env b/default.env
new file mode 100644
index 00000000..4295ba57
--- /dev/null
+++ b/default.env
@@ -0,0 +1,16 @@
+bootcmd=sf probe; setenv mtdparts nor0:$partitions; if mmc dev 1; then bootmenu 10; else bootmenu 2; fi
+bootmenu_0=Boot OpenWrt=run spi_boot
+bootmenu_1=Flash bootloader from MMC=run flash_boot
+bootmenu_2=Flash everything from MMC=run flash_all
+fdt_addr_r=0x01f00000
+flash_all=mmc read $temp_store 0x40 0x7fc0 && run flash_unlock && sf update $temp_store 0x8000 0xff8000 && run flash_lock && reset
+flash_boot=mmc read $temp_store 0x40 0xfc0 && run flash_unlock && sf update $temp_store 0x8000 0x1f8000 && run flash_lock && reset
+flash_lock=sspi 0 08 06; sspi 0 24 01bc07; sleep 1; sspi 0 16 05 sspi_out; if test "$sspi_out" = "FFBC"; then echo "Flash locked"; true; else echo "Error: flash lock failed"; false; fi
+flash_unlock=sspi 0 08 06; sspi 0 24 010007; sleep 1; sspi 0 16 05 sspi_out; if test "$sspi_out" = "FF00"; then echo "Flash unlocked"; true; else echo "Error: flash unlock failed"; false; fi
+kernel_addr_r=0x02080000
+kernel_args=console=ttyS2,115200 earlycon=uart8250,mmio32,0xff130000 rw rootwait panic=1 init=/etc/preinit noinitrd
+partitions=32k(unused),992k(tpl_spl),1M(uboot),5888k(kernel),256k(fdt),8M(rootfs)
+spi_boot=mtd read kernel $temp_store; lzmadec $temp_store $kernel_addr_r; mtd read fdt $fdt_addr_r; setenv bootargs $kernel_args mtdparts=spi0.0:$partitions; run start_kernel
+start_kernel=booti $kernel_addr_r - $fdt_addr_r
+temp_store=0x3000000
+
diff --git a/include/configs/rk3328_common.h b/include/configs/rk3328_common.h
index 0538da75..c9f0328e 100644
--- a/include/configs/rk3328_common.h
+++ b/include/configs/rk3328_common.h
@@ -23,6 +23,8 @@
 #define CONFIG_SPL_BSS_START_ADDR	0x2000000
 #define CONFIG_SPL_BSS_MAX_SIZE		0x2000
 
+#define CONFIG_SYS_UBOOT_BASE		CONFIG_SYS_SPI_U_BOOT_OFFS
+
 #define CONFIG_SYS_BOOTM_LEN	(64 << 20)	/* 64M */
 
 /* FAT sd card locations. */
